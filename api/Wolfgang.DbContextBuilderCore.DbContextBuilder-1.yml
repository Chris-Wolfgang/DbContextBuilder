### YamlMime:ManagedReference
items:
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  commentId: T:Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  id: DbContextBuilder`1
  parent: Wolfgang.DbContextBuilderCore
  children:
  - Wolfgang.DbContextBuilderCore.DbContextBuilder`1.BuildAsync
  - Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom``1(System.Int32)
  - Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom``1(System.Int32,System.Func{``0,System.Int32,``0})
  - Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom``1(System.Int32,System.Func{``0,``0})
  - Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWith``1(System.Collections.Generic.IEnumerable{``0})
  - Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWith``1(``0[])
  - Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseAutoFixture
  - Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseCustomRandomEntityGenerator(Wolfgang.DbContextBuilderCore.IGenerateRandomEntities)
  - Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseDbContextOptionsBuilder(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{`0})
  - Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseInMemory
  - Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseSqlite
  - Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseSqliteForMsSqlServer
  langs:
  - csharp
  - vb
  name: DbContextBuilder<T>
  nameWithType: DbContextBuilder<T>
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>
  type: Class
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: DbContextBuilder
    path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
    startLine: 14
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: Uses the Builder pattern to create instances of DbContext types seeded with specified data.
  example: []
  syntax:
    content: 'public class DbContextBuilder<T> where T : DbContext'
    typeParameters:
    - id: T
    content.vb: Public Class DbContextBuilder(Of T As DbContext)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: DbContextBuilder(Of T)
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T)
  name.vb: DbContextBuilder(Of T)
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseSqlite
  commentId: M:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseSqlite
  id: UseSqlite
  parent: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  langs:
  - csharp
  - vb
  name: UseSqlite()
  nameWithType: DbContextBuilder<T>.UseSqlite()
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.UseSqlite()
  type: Method
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: UseSqlite
    path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
    startLine: 37
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: Instructs the builder to use SQLite as the database provider.
  example: []
  syntax:
    content: public DbContextBuilder<T> UseSqlite()
    return:
      type: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
      description: <xref href="Wolfgang.DbContextBuilderCore.DbContextBuilder%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function UseSqlite() As DbContextBuilder(Of T)
  overload: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseSqlite*
  nameWithType.vb: DbContextBuilder(Of T).UseSqlite()
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).UseSqlite()
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseSqliteForMsSqlServer
  commentId: M:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseSqliteForMsSqlServer
  id: UseSqliteForMsSqlServer
  parent: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  langs:
  - csharp
  - vb
  name: UseSqliteForMsSqlServer()
  nameWithType: DbContextBuilder<T>.UseSqliteForMsSqlServer()
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.UseSqliteForMsSqlServer()
  type: Method
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: UseSqliteForMsSqlServer
    path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
    startLine: 58
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: >-
    Configures the builder to use SQLite as the database provider with SQL Server-specific adjustments,

    such as default value mappings, to better mimic SQL Server behavior for testing or compatibility.
  example: []
  syntax:
    content: public DbContextBuilder<T> UseSqliteForMsSqlServer()
    return:
      type: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
      description: <xref href="Wolfgang.DbContextBuilderCore.DbContextBuilder%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function UseSqliteForMsSqlServer() As DbContextBuilder(Of T)
  overload: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseSqliteForMsSqlServer*
  nameWithType.vb: DbContextBuilder(Of T).UseSqliteForMsSqlServer()
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).UseSqliteForMsSqlServer()
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseInMemory
  commentId: M:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseInMemory
  id: UseInMemory
  parent: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  langs:
  - csharp
  - vb
  name: UseInMemory()
  nameWithType: DbContextBuilder<T>.UseInMemory()
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.UseInMemory()
  type: Method
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: UseInMemory
    path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
    startLine: 78
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: Instructs the builder to use InMemory as the database provider.
  example: []
  syntax:
    content: public DbContextBuilder<T> UseInMemory()
    return:
      type: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
      description: <xref href="Wolfgang.DbContextBuilderCore.DbContextBuilder%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function UseInMemory() As DbContextBuilder(Of T)
  overload: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseInMemory*
  nameWithType.vb: DbContextBuilder(Of T).UseInMemory()
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).UseInMemory()
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseAutoFixture
  commentId: M:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseAutoFixture
  id: UseAutoFixture
  parent: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  langs:
  - csharp
  - vb
  name: UseAutoFixture()
  nameWithType: DbContextBuilder<T>.UseAutoFixture()
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.UseAutoFixture()
  type: Method
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: UseAutoFixture
    path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
    startLine: 90
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: Tell DbContextBuilder to use AutoFixture to create random entities.
  example: []
  syntax:
    content: public DbContextBuilder<T> UseAutoFixture()
    return:
      type: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
      description: <xref href="Wolfgang.DbContextBuilderCore.DbContextBuilder%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function UseAutoFixture() As DbContextBuilder(Of T)
  overload: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseAutoFixture*
  nameWithType.vb: DbContextBuilder(Of T).UseAutoFixture()
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).UseAutoFixture()
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseCustomRandomEntityGenerator(Wolfgang.DbContextBuilderCore.IGenerateRandomEntities)
  commentId: M:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseCustomRandomEntityGenerator(Wolfgang.DbContextBuilderCore.IGenerateRandomEntities)
  id: UseCustomRandomEntityGenerator(Wolfgang.DbContextBuilderCore.IGenerateRandomEntities)
  parent: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  langs:
  - csharp
  - vb
  name: UseCustomRandomEntityGenerator(IGenerateRandomEntities)
  nameWithType: DbContextBuilder<T>.UseCustomRandomEntityGenerator(IGenerateRandomEntities)
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.UseCustomRandomEntityGenerator(Wolfgang.DbContextBuilderCore.IGenerateRandomEntities)
  type: Method
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: UseCustomRandomEntityGenerator
    path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
    startLine: 105
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: >-
    Allows the user to specify their own implementation of IGenerateRandomEntities

    for generating random entities.
  example: []
  syntax:
    content: public DbContextBuilder<T> UseCustomRandomEntityGenerator(IGenerateRandomEntities generator)
    parameters:
    - id: generator
      type: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities
      description: The generator to use
    return:
      type: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
      description: <xref href="Wolfgang.DbContextBuilderCore.DbContextBuilder%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function UseCustomRandomEntityGenerator(generator As IGenerateRandomEntities) As DbContextBuilder(Of T)
  overload: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseCustomRandomEntityGenerator*
  nameWithType.vb: DbContextBuilder(Of T).UseCustomRandomEntityGenerator(IGenerateRandomEntities)
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).UseCustomRandomEntityGenerator(Wolfgang.DbContextBuilderCore.IGenerateRandomEntities)
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseDbContextOptionsBuilder(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{`0})
  commentId: M:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseDbContextOptionsBuilder(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{`0})
  id: UseDbContextOptionsBuilder(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{`0})
  parent: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  langs:
  - csharp
  - vb
  name: UseDbContextOptionsBuilder(DbContextOptionsBuilder<T>)
  nameWithType: DbContextBuilder<T>.UseDbContextOptionsBuilder(DbContextOptionsBuilder<T>)
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.UseDbContextOptionsBuilder(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder<T>)
  type: Method
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: UseDbContextOptionsBuilder
    path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
    startLine: 121
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: Specifies a specific instance of UseDbContextOptionsBuilder to use when creating the DbContext.
  example: []
  syntax:
    content: public DbContextBuilder<T> UseDbContextOptionsBuilder(DbContextOptionsBuilder<T> dbContextOptionsBuilder)
    parameters:
    - id: dbContextOptionsBuilder
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{{T}}
      description: ''
    return:
      type: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
      description: ''
    content.vb: Public Function UseDbContextOptionsBuilder(dbContextOptionsBuilder As DbContextOptionsBuilder(Of T)) As DbContextBuilder(Of T)
  overload: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseDbContextOptionsBuilder*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: callback is null
  nameWithType.vb: DbContextBuilder(Of T).UseDbContextOptionsBuilder(DbContextOptionsBuilder(Of T))
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).UseDbContextOptionsBuilder(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder(Of T))
  name.vb: UseDbContextOptionsBuilder(DbContextOptionsBuilder(Of T))
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWith``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWith``1(System.Collections.Generic.IEnumerable{``0})
  id: SeedWith``1(System.Collections.Generic.IEnumerable{``0})
  parent: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  langs:
  - csharp
  - vb
  name: SeedWith<TEntity>(IEnumerable<TEntity>)
  nameWithType: DbContextBuilder<T>.SeedWith<TEntity>(IEnumerable<TEntity>)
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.SeedWith<TEntity>(System.Collections.Generic.IEnumerable<TEntity>)
  type: Method
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: SeedWith
    path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
    startLine: 138
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: Populates the specified DbSet with the provided entities.
  example: []
  syntax:
    content: 'public DbContextBuilder<T> SeedWith<TEntity>(IEnumerable<TEntity> entities) where TEntity : class'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: The entities to populate the database with
    typeParameters:
    - id: TEntity
    return:
      type: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
      description: <xref href="Wolfgang.DbContextBuilderCore.DbContextBuilder%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function SeedWith(Of TEntity As Class)(entities As IEnumerable(Of TEntity)) As DbContextBuilder(Of T)
  overload: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWith*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: entities is null
  nameWithType.vb: DbContextBuilder(Of T).SeedWith(Of TEntity)(IEnumerable(Of TEntity))
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).SeedWith(Of TEntity)(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: SeedWith(Of TEntity)(IEnumerable(Of TEntity))
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWith``1(``0[])
  commentId: M:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWith``1(``0[])
  id: SeedWith``1(``0[])
  parent: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  langs:
  - csharp
  - vb
  name: SeedWith<TEntity>(params TEntity[])
  nameWithType: DbContextBuilder<T>.SeedWith<TEntity>(params TEntity[])
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.SeedWith<TEntity>(params TEntity[])
  type: Method
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: SeedWith
    path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
    startLine: 158
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: Populates the specified DbSet with the provided entities.
  example: []
  syntax:
    content: 'public DbContextBuilder<T> SeedWith<TEntity>(params TEntity[] entities) where TEntity : class'
    parameters:
    - id: entities
      type: '{TEntity}[]'
      description: The entities to populate the database with
    typeParameters:
    - id: TEntity
    return:
      type: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
      description: <xref href="Wolfgang.DbContextBuilderCore.DbContextBuilder%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function SeedWith(Of TEntity As Class)(ParamArray entities As TEntity()) As DbContextBuilder(Of T)
  overload: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWith*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: entities is null
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: entities contains a null item
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: entities contains a string
  nameWithType.vb: DbContextBuilder(Of T).SeedWith(Of TEntity)(ParamArray TEntity())
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).SeedWith(Of TEntity)(ParamArray TEntity())
  name.vb: SeedWith(Of TEntity)(ParamArray TEntity())
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom``1(System.Int32)
  commentId: M:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom``1(System.Int32)
  id: SeedWithRandom``1(System.Int32)
  parent: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  langs:
  - csharp
  - vb
  name: SeedWithRandom<TEntity>(int)
  nameWithType: DbContextBuilder<T>.SeedWithRandom<TEntity>(int)
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.SeedWithRandom<TEntity>(int)
  type: Method
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: SeedWithRandom
    path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
    startLine: 193
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: Populates the specified DbSet with random entities of type TEntity.
  example: []
  syntax:
    content: 'public DbContextBuilder<T> SeedWithRandom<TEntity>(int count) where TEntity : class'
    parameters:
    - id: count
      type: System.Int32
      description: The number of items to create
    typeParameters:
    - id: TEntity
      description: The type of entity to create
    return:
      type: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
      description: <xref href="Wolfgang.DbContextBuilderCore.DbContextBuilder%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function SeedWithRandom(Of TEntity As Class)(count As Integer) As DbContextBuilder(Of T)
  overload: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: count is less than 1
  nameWithType.vb: DbContextBuilder(Of T).SeedWithRandom(Of TEntity)(Integer)
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).SeedWithRandom(Of TEntity)(Integer)
  name.vb: SeedWithRandom(Of TEntity)(Integer)
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom``1(System.Int32,System.Func{``0,``0})
  commentId: M:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom``1(System.Int32,System.Func{``0,``0})
  id: SeedWithRandom``1(System.Int32,System.Func{``0,``0})
  parent: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  langs:
  - csharp
  - vb
  name: SeedWithRandom<TEntity>(int, Func<TEntity, TEntity>)
  nameWithType: DbContextBuilder<T>.SeedWithRandom<TEntity>(int, Func<TEntity, TEntity>)
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.SeedWithRandom<TEntity>(int, System.Func<TEntity, TEntity>)
  type: Method
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: SeedWithRandom
    path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
    startLine: 218
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: Populates the specified DbSet with random entities of type TEntity.
  example: []
  syntax:
    content: 'public DbContextBuilder<T> SeedWithRandom<TEntity>(int count, Func<TEntity, TEntity> func) where TEntity : class'
    parameters:
    - id: count
      type: System.Int32
      description: The number of items to create
    - id: func
      type: System.Func{{TEntity},{TEntity}}
      description: A function that takes a TEntity and returns an updated TEntity
    typeParameters:
    - id: TEntity
      description: The type of entity to create
    return:
      type: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
      description: <xref href="Wolfgang.DbContextBuilderCore.DbContextBuilder%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function SeedWithRandom(Of TEntity As Class)(count As Integer, func As Func(Of TEntity, TEntity)) As DbContextBuilder(Of T)
  overload: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: count is less than 1
  nameWithType.vb: DbContextBuilder(Of T).SeedWithRandom(Of TEntity)(Integer, Func(Of TEntity, TEntity))
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).SeedWithRandom(Of TEntity)(Integer, System.Func(Of TEntity, TEntity))
  name.vb: SeedWithRandom(Of TEntity)(Integer, Func(Of TEntity, TEntity))
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom``1(System.Int32,System.Func{``0,System.Int32,``0})
  commentId: M:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom``1(System.Int32,System.Func{``0,System.Int32,``0})
  id: SeedWithRandom``1(System.Int32,System.Func{``0,System.Int32,``0})
  parent: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  langs:
  - csharp
  - vb
  name: SeedWithRandom<TEntity>(int, Func<TEntity, int, TEntity>)
  nameWithType: DbContextBuilder<T>.SeedWithRandom<TEntity>(int, Func<TEntity, int, TEntity>)
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.SeedWithRandom<TEntity>(int, System.Func<TEntity, int, TEntity>)
  type: Method
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: SeedWithRandom
    path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
    startLine: 248
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: Populates the specified DbSet with random entities of type TEntity.
  example: []
  syntax:
    content: 'public DbContextBuilder<T> SeedWithRandom<TEntity>(int count, Func<TEntity, int, TEntity> func) where TEntity : class'
    parameters:
    - id: count
      type: System.Int32
      description: The number of items to create
    - id: func
      type: System.Func{{TEntity},System.Int32,{TEntity}}
      description: A function that takes a TEntity and the index number of the entity and returns an updated TEntity
    typeParameters:
    - id: TEntity
      description: The type of entity to create
    return:
      type: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
      description: <xref href="Wolfgang.DbContextBuilderCore.DbContextBuilder%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function SeedWithRandom(Of TEntity As Class)(count As Integer, func As Func(Of TEntity, Integer, TEntity)) As DbContextBuilder(Of T)
  overload: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: count is less than 1
  nameWithType.vb: DbContextBuilder(Of T).SeedWithRandom(Of TEntity)(Integer, Func(Of TEntity, Integer, TEntity))
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).SeedWithRandom(Of TEntity)(Integer, System.Func(Of TEntity, Integer, TEntity))
  name.vb: SeedWithRandom(Of TEntity)(Integer, Func(Of TEntity, Integer, TEntity))
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.BuildAsync
  commentId: M:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.BuildAsync
  id: BuildAsync
  parent: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  langs:
  - csharp
  - vb
  name: BuildAsync()
  nameWithType: DbContextBuilder<T>.BuildAsync()
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.BuildAsync()
  type: Method
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: BuildAsync
    path: src/Wolfgang.DbContextBuilder-Core/DbContextBuilder.cs
    startLine: 273
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: Creates a new instance of T seeded with specified data."/&gt;.
  example: []
  syntax:
    content: public Task<T> BuildAsync()
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: instance of {T}
    content.vb: Public Function BuildAsync() As Task(Of T)
  overload: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.BuildAsync*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The specified database provider is not supported
  nameWithType.vb: DbContextBuilder(Of T).BuildAsync()
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).BuildAsync()
references:
- uid: Wolfgang.DbContextBuilderCore
  commentId: N:Wolfgang.DbContextBuilderCore
  href: Wolfgang.html
  name: Wolfgang.DbContextBuilderCore
  nameWithType: Wolfgang.DbContextBuilderCore
  fullName: Wolfgang.DbContextBuilderCore
  spec.csharp:
  - uid: Wolfgang
    name: Wolfgang
    href: Wolfgang.html
  - name: .
  - uid: Wolfgang.DbContextBuilderCore
    name: DbContextBuilderCore
    href: Wolfgang.DbContextBuilderCore.html
  spec.vb:
  - uid: Wolfgang
    name: Wolfgang
    href: Wolfgang.html
  - name: .
  - uid: Wolfgang.DbContextBuilderCore
    name: DbContextBuilderCore
    href: Wolfgang.DbContextBuilderCore.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  commentId: T:Wolfgang.DbContextBuilderCore.DbContextBuilder`1
  parent: Wolfgang.DbContextBuilderCore
  href: Wolfgang.DbContextBuilderCore.DbContextBuilder-1.html
  name: DbContextBuilder<T>
  nameWithType: DbContextBuilder<T>
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>
  nameWithType.vb: DbContextBuilder(Of T)
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T)
  name.vb: DbContextBuilder(Of T)
  spec.csharp:
  - uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
    name: DbContextBuilder
    href: Wolfgang.DbContextBuilderCore.DbContextBuilder-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1
    name: DbContextBuilder
    href: Wolfgang.DbContextBuilderCore.DbContextBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseSqlite*
  commentId: Overload:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseSqlite
  href: Wolfgang.DbContextBuilderCore.DbContextBuilder-1.html#Wolfgang_DbContextBuilderCore_DbContextBuilder_1_UseSqlite
  name: UseSqlite
  nameWithType: DbContextBuilder<T>.UseSqlite
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.UseSqlite
  nameWithType.vb: DbContextBuilder(Of T).UseSqlite
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).UseSqlite
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseSqliteForMsSqlServer*
  commentId: Overload:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseSqliteForMsSqlServer
  href: Wolfgang.DbContextBuilderCore.DbContextBuilder-1.html#Wolfgang_DbContextBuilderCore_DbContextBuilder_1_UseSqliteForMsSqlServer
  name: UseSqliteForMsSqlServer
  nameWithType: DbContextBuilder<T>.UseSqliteForMsSqlServer
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.UseSqliteForMsSqlServer
  nameWithType.vb: DbContextBuilder(Of T).UseSqliteForMsSqlServer
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).UseSqliteForMsSqlServer
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseInMemory*
  commentId: Overload:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseInMemory
  href: Wolfgang.DbContextBuilderCore.DbContextBuilder-1.html#Wolfgang_DbContextBuilderCore_DbContextBuilder_1_UseInMemory
  name: UseInMemory
  nameWithType: DbContextBuilder<T>.UseInMemory
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.UseInMemory
  nameWithType.vb: DbContextBuilder(Of T).UseInMemory
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).UseInMemory
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseAutoFixture*
  commentId: Overload:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseAutoFixture
  href: Wolfgang.DbContextBuilderCore.DbContextBuilder-1.html#Wolfgang_DbContextBuilderCore_DbContextBuilder_1_UseAutoFixture
  name: UseAutoFixture
  nameWithType: DbContextBuilder<T>.UseAutoFixture
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.UseAutoFixture
  nameWithType.vb: DbContextBuilder(Of T).UseAutoFixture
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).UseAutoFixture
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseCustomRandomEntityGenerator*
  commentId: Overload:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseCustomRandomEntityGenerator
  href: Wolfgang.DbContextBuilderCore.DbContextBuilder-1.html#Wolfgang_DbContextBuilderCore_DbContextBuilder_1_UseCustomRandomEntityGenerator_Wolfgang_DbContextBuilderCore_IGenerateRandomEntities_
  name: UseCustomRandomEntityGenerator
  nameWithType: DbContextBuilder<T>.UseCustomRandomEntityGenerator
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.UseCustomRandomEntityGenerator
  nameWithType.vb: DbContextBuilder(Of T).UseCustomRandomEntityGenerator
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).UseCustomRandomEntityGenerator
- uid: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities
  commentId: T:Wolfgang.DbContextBuilderCore.IGenerateRandomEntities
  parent: Wolfgang.DbContextBuilderCore
  href: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities.html
  name: IGenerateRandomEntities
  nameWithType: IGenerateRandomEntities
  fullName: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseDbContextOptionsBuilder*
  commentId: Overload:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.UseDbContextOptionsBuilder
  href: Wolfgang.DbContextBuilderCore.DbContextBuilder-1.html#Wolfgang_DbContextBuilderCore_DbContextBuilder_1_UseDbContextOptionsBuilder_Microsoft_EntityFrameworkCore_DbContextOptionsBuilder__0__
  name: UseDbContextOptionsBuilder
  nameWithType: DbContextBuilder<T>.UseDbContextOptionsBuilder
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.UseDbContextOptionsBuilder
  nameWithType.vb: DbContextBuilder(Of T).UseDbContextOptionsBuilder
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).UseDbContextOptionsBuilder
- uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{{T}}
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{`0}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontextoptionsbuilder-1
  name: DbContextOptionsBuilder<T>
  nameWithType: DbContextOptionsBuilder<T>
  fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder<T>
  nameWithType.vb: DbContextOptionsBuilder(Of T)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder(Of T)
  name.vb: DbContextOptionsBuilder(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontextoptionsbuilder-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontextoptionsbuilder-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontextoptionsbuilder-1
  name: DbContextOptionsBuilder<TContext>
  nameWithType: DbContextOptionsBuilder<TContext>
  fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder<TContext>
  nameWithType.vb: DbContextOptionsBuilder(Of TContext)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder(Of TContext)
  name.vb: DbContextOptionsBuilder(Of TContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontextoptionsbuilder-1
  - name: <
  - name: TContext
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontextoptionsbuilder-1
  - name: (
  - name: Of
  - name: " "
  - name: TContext
  - name: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWith*
  commentId: Overload:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWith
  href: Wolfgang.DbContextBuilderCore.DbContextBuilder-1.html#Wolfgang_DbContextBuilderCore_DbContextBuilder_1_SeedWith__1_System_Collections_Generic_IEnumerable___0__
  name: SeedWith
  nameWithType: DbContextBuilder<T>.SeedWith
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.SeedWith
  nameWithType.vb: DbContextBuilder(Of T).SeedWith
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).SeedWith
- uid: System.Collections.Generic.IEnumerable{{TEntity}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  nameWithType.vb: IEnumerable(Of TEntity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TEntity)
  name.vb: IEnumerable(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: '{TEntity}[]'
  isExternal: true
  name: TEntity[]
  nameWithType: TEntity[]
  fullName: TEntity[]
  nameWithType.vb: TEntity()
  fullName.vb: TEntity()
  name.vb: TEntity()
  spec.csharp:
  - name: TEntity
  - name: '['
  - name: ']'
  spec.vb:
  - name: TEntity
  - name: (
  - name: )
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom*
  commentId: Overload:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.SeedWithRandom
  href: Wolfgang.DbContextBuilderCore.DbContextBuilder-1.html#Wolfgang_DbContextBuilderCore_DbContextBuilder_1_SeedWithRandom__1_System_Int32_
  name: SeedWithRandom
  nameWithType: DbContextBuilder<T>.SeedWithRandom
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.SeedWithRandom
  nameWithType.vb: DbContextBuilder(Of T).SeedWithRandom
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).SeedWithRandom
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Func{{TEntity},{TEntity}}
  commentId: T:System.Func{``0,``0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TEntity, TEntity>
  nameWithType: Func<TEntity, TEntity>
  fullName: System.Func<TEntity, TEntity>
  nameWithType.vb: Func(Of TEntity, TEntity)
  fullName.vb: System.Func(Of TEntity, TEntity)
  name.vb: Func(Of TEntity, TEntity)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{{TEntity},System.Int32,{TEntity}}
  commentId: T:System.Func{``0,System.Int32,``0}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<TEntity, int, TEntity>
  nameWithType: Func<TEntity, int, TEntity>
  fullName: System.Func<TEntity, int, TEntity>
  nameWithType.vb: Func(Of TEntity, Integer, TEntity)
  fullName.vb: System.Func(Of TEntity, Integer, TEntity)
  name.vb: Func(Of TEntity, Integer, TEntity)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: Wolfgang.DbContextBuilderCore.DbContextBuilder`1.BuildAsync*
  commentId: Overload:Wolfgang.DbContextBuilderCore.DbContextBuilder`1.BuildAsync
  href: Wolfgang.DbContextBuilderCore.DbContextBuilder-1.html#Wolfgang_DbContextBuilderCore_DbContextBuilder_1_BuildAsync
  name: BuildAsync
  nameWithType: DbContextBuilder<T>.BuildAsync
  fullName: Wolfgang.DbContextBuilderCore.DbContextBuilder<T>.BuildAsync
  nameWithType.vb: DbContextBuilder(Of T).BuildAsync
  fullName.vb: Wolfgang.DbContextBuilderCore.DbContextBuilder(Of T).BuildAsync
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
