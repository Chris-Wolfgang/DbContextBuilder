### YamlMime:ManagedReference
items:
- uid: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities
  commentId: T:Wolfgang.DbContextBuilderCore.IGenerateRandomEntities
  id: IGenerateRandomEntities
  parent: Wolfgang.DbContextBuilderCore
  children:
  - Wolfgang.DbContextBuilderCore.IGenerateRandomEntities.GenerateRandomEntities``1(System.Int32)
  langs:
  - csharp
  - vb
  name: IGenerateRandomEntities
  nameWithType: IGenerateRandomEntities
  fullName: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities
  type: Interface
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/IGenerateRandomEntities.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: IGenerateRandomEntities
    path: src/Wolfgang.DbContextBuilder-Core/IGenerateRandomEntities.cs
    startLine: 5
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: Provides an API to generate random entities for seeding databases.
  example: []
  syntax:
    content: public interface IGenerateRandomEntities
    content.vb: Public Interface IGenerateRandomEntities
- uid: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities.GenerateRandomEntities``1(System.Int32)
  commentId: M:Wolfgang.DbContextBuilderCore.IGenerateRandomEntities.GenerateRandomEntities``1(System.Int32)
  id: GenerateRandomEntities``1(System.Int32)
  parent: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities
  langs:
  - csharp
  - vb
  name: GenerateRandomEntities<TEntity>(int)
  nameWithType: IGenerateRandomEntities.GenerateRandomEntities<TEntity>(int)
  fullName: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities.GenerateRandomEntities<TEntity>(int)
  type: Method
  source:
    remote:
      path: src/Wolfgang.DbContextBuilder-Core/IGenerateRandomEntities.cs
      branch: develop
      repo: https://github.com/Chris-Wolfgang/DbContextBuilder.git
    id: GenerateRandomEntities
    path: src/Wolfgang.DbContextBuilder-Core/IGenerateRandomEntities.cs
    startLine: 14
  assemblies:
  - Wolfgang.DbContextBuilder-Core
  namespace: Wolfgang.DbContextBuilderCore
  summary: Creates the specified number of entities of type TEntity with random data.
  example: []
  syntax:
    content: 'IEnumerable<TEntity> GenerateRandomEntities<TEntity>(int count) where TEntity : class'
    parameters:
    - id: count
      type: System.Int32
      description: The number of entities to create
    typeParameters:
    - id: TEntity
      description: The type of entity to create
    return:
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: An IEnumerable{TEntity}
    content.vb: Function GenerateRandomEntities(Of TEntity As Class)(count As Integer) As IEnumerable(Of TEntity)
  overload: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities.GenerateRandomEntities*
  nameWithType.vb: IGenerateRandomEntities.GenerateRandomEntities(Of TEntity)(Integer)
  fullName.vb: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities.GenerateRandomEntities(Of TEntity)(Integer)
  name.vb: GenerateRandomEntities(Of TEntity)(Integer)
references:
- uid: Wolfgang.DbContextBuilderCore
  commentId: N:Wolfgang.DbContextBuilderCore
  href: Wolfgang.html
  name: Wolfgang.DbContextBuilderCore
  nameWithType: Wolfgang.DbContextBuilderCore
  fullName: Wolfgang.DbContextBuilderCore
  spec.csharp:
  - uid: Wolfgang
    name: Wolfgang
    href: Wolfgang.html
  - name: .
  - uid: Wolfgang.DbContextBuilderCore
    name: DbContextBuilderCore
    href: Wolfgang.DbContextBuilderCore.html
  spec.vb:
  - uid: Wolfgang
    name: Wolfgang
    href: Wolfgang.html
  - name: .
  - uid: Wolfgang.DbContextBuilderCore
    name: DbContextBuilderCore
    href: Wolfgang.DbContextBuilderCore.html
- uid: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities.GenerateRandomEntities*
  commentId: Overload:Wolfgang.DbContextBuilderCore.IGenerateRandomEntities.GenerateRandomEntities
  href: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities.html#Wolfgang_DbContextBuilderCore_IGenerateRandomEntities_GenerateRandomEntities__1_System_Int32_
  name: GenerateRandomEntities
  nameWithType: IGenerateRandomEntities.GenerateRandomEntities
  fullName: Wolfgang.DbContextBuilderCore.IGenerateRandomEntities.GenerateRandomEntities
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IEnumerable{{TEntity}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  nameWithType.vb: IEnumerable(Of TEntity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TEntity)
  name.vb: IEnumerable(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
