name: Release on Version Tag

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main

permissions:
  contents: read

jobs:
  release:
    name: Build, Test, Pack, and Publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            5.0.x
            6.0.x
            7.0.x
            8.0.x
            9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Solution (Release)
        run: dotnet build --no-restore --configuration Release

      - name: Run Tests for Each Test Project (Release)
        run: |
          find ./tests -type f -name '*Test*.csproj' | while read proj; do
            echo "Testing $proj"
            dotnet test "$proj" --no-build --configuration Release
          done

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: TestResults/

      - name: Pack NuGet Package
        run: dotnet pack --no-build --configuration Release --output ./nuget-packages

      - name: Publish NuGet Package
        if: runner.os == 'Linux'
        run: |
          for pkg in ./nuget-packages/*.nupkg; do
            dotnet nuget push "$pkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
          done
