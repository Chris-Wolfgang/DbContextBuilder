name: Release on Version Tag

permissions:
  contents: read

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            5.0.x
            6.0.x
            7.0.x
            8.0.x
            9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Solution (Release)
        # Specify any additional build options
        run: dotnet build --no-restore --configuration Release

      - name: Run Tests and Collect Coverage for Each Test Project (Release)
        run: |
          find ./tests -type f -name '*Test*.csproj' | while read proj; do
            echo "Testing $proj"
            dotnet test "$proj" --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory "./TestResults"
          done

      - name: Pack projects
        shell: pwsh
        run: |
          mkdir ./nupkg
          Get-ChildItem -Path "src" -Recurse -Filter *.csproj | Where-Object { ($_.Name -notlike "*Test*.csproj") -and ($_.Name -notlike "*.Tests.csproj") } | ForEach-Object {
            dotnet pack $_.FullName --configuration Release --no-build --output ./nupkg
          }

      - name: Push packages to NuGet
        if: startsWith(github.ref, 'refs/tags/v')
        shell: pwsh
        run: |
          Get-ChildItem -Path "./nupkg" -Filter *.nupkg | ForEach-Object {
            dotnet nuget push $_.FullName --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
          }
